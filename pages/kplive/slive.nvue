<template>
	<view class="container">
		<view>
			<!--  这里是状态栏 -->&nbsp;
		</view>
		<view>

			<!-- 横屏展示 -->
			<live-pusher v-if="screen==1" id='livePusher' ref="livePusher" class="livePusher"
				:style="{'height':isHeight+'px'}"
				url="rtmp://livepush.kpszkj.cn/kplive/kp_wh?txSecret=c367684f4f99dcc9654b1f5503c41867&txTime=626D5CFF"
				audio-volume-type="media" orientation="horizontal" mode="SD" :muted="false" :enable-camera="true"
				:auto-focus="true" :beauty="3" whiteness="3" aspect="1:1" @statechange="statechange"
				@netstatus="netstatus" @error="error">
			</live-pusher>
			<!-- 横屏-翻转摄像头 -->
			<image v-if="!lState && screen==1" src="../../static/overturn.png" class="w_btn overturnBtn2"
				@click="switchCamera">
			</image>
			<!-- 横屏-开始直播 -->
			<text v-if="!lState && screen==1" class="w_live w_live2" id="w_live" size="mini" type="primary"
				@click="start1">开始直播</text>
			<!-- 返回按钮 -->
			<button v-if="!lState" class="returna" @click="reClick">aaa</button>



			<!-- 直播关闭 -->
			<image v-if="lState" src="../../static/close.png" class="closebtn w_btn" @click="popup"></image>
			<!-- 直播关闭弹窗 -->
			<uni-popup ref="popup" type="dialog" maskClick="false">
				<uni-popup-dialog mode="base" type="warn" title="提示" content="是否关闭直播" message="成功消息" :duration="2000"
					:before-close="true" @close="close1" @confirm="confirm"></uni-popup-dialog>
			</uni-popup>

			<!-- 直播分享弹窗 -->
			<uni-popup ref="popup1" type="share" maskClick="false">
				<uni-popup-share title="分享到" @select="select"></uni-popup-share>
			</uni-popup>

			<!-- 直播分享 -->
			<image v-if="lState" src="../../static/share.png" class="closebtn1 w_btn" @click="popup1()"></image>
			<!-- 翻转摄像头 -->
			<image v-if="lState" src="../../static/overturn.png" class="overturnBtn1 w_btn" @click="switchCamera">
			</image>
			<!-- 直播倒计时 -->
			<text v-if="isDown" class="aaa">{{dowNum}}</text>

			<!-- 直播计时器 -->
			<text v-if="!lState" id="text" class="text">{{iTime}}</text>

			<!-- 横屏- -->
			<view v-if="!lState && screen==1" class="lMess2">
				<image class="image2" :src="srcUrl"></image>
				<text class="qxt">主播 千小兔</text>
			</view>
			<!-- 直播后用户信息 -->
			<view v-if="lState" class="lMess">
				<image class="image" :src="srcUrl"></image>
				<text class="pcla">主播 千小兔</text>
				<view class="radiocla"></view>
				<text class="pcla1">在线1.5w | 累计3.88w</text>
			</view>
			<!-- <button class="btn w_live" @click="start">結束直播</button>
			<button class="btn" @click="pause">暂停推流</button>
			<button class="btn" @click="resume">resume</button>
			<button class="btn" @click="stop">停止推流</button>
			<button class="btn" @click="snapshot">快照</button>
			<button class="btn" @click="startPreview">开启摄像头预览</button>
			<button class="btn" @click="stopPreview">关闭摄像头预览</button>
			<button class="btn" @click="switchCamera">切换摄像头</button> -->

		</view>
	</view>
</template>
<script>
	export default {
		data() {
			return {
				//屏幕方向 0竖屏 1横屏
				screen: 1,
				//直播状态
				lState: false,
				//屏幕高度
				screenWidth: '',
				//图片路径
				srcUrl: 'https://bjetxgzv.cdn.bspapp.com/VKCEYUGU-uni-app-doc/6acec660-4f31-11eb-a16f-5b3e54966275.jpg',
				//倒计时
				isDown: false,
				dowNum: 4,
				//获取屏幕高度
				isHeight: 0,
				//秒 分 时
				s: 0,
				m: 0,
				h: 0,
				iTime: '00:00:00',
				timer: 0,
			}
		},
		onReady() {
			console.log('111横屏直播页面')
			/* 切换横屏 */
			plus.screen.lockOrientation('landscape-primary');
			// 注意：需要在onReady中 或 onLoad 延时
			this.context = uni.createLivePusherContext("livePusher", this);
			this.startPreview();
			this.info();
		},
		methods: {
			info: function() {
				console.log('Info111')
				let that = this;
				uni.getSystemInfo({
					success: function(res) {
						console.log(res.model);
						console.log(res.pixelRatio);
						console.log(res.windowWidth);
						console.log(res.windowHeight);
						console.log(res.language);
						console.log(res.version);
						console.log(res.platform);
						console.log(res.deviceId);
						that.isHeight = res.screenWidth - res.statusBarHeight - 2;
					}
				});
			},
			finality() {
				this.$emit('finish');
			},
			statechange(e) {
				//console.log("statechange:" + JSON.stringify(e));
			},
			netstatus(e) {
				// console.log("netstatus:" + JSON.stringify(e));
			},
			error(e) {
				console.log("error:" + JSON.stringify(e));
			},
			start1() {
				this.lState = true;
				// timeOut();
				this.countDown();
			},
			countDown() {
				// function timeOut() {
				if (this.dowNum != 0) {
					let that = this
					setTimeout(function() {
						that.isDown = true;
						that.dowNum--;
						console.log(that.dowNum + 'aaa')
						that.countDown();
					}, 1000);
				} else {
					this.start()
				}
				// }
			},
			reClick() {

				/* uni.navigateTo({
					url: "/pages/index/index"
				}); */
				plus.screen.lockOrientation('portrait-primary');
				uni.navigateBack({
				    delta: 1
				});
				console.log('返回')

			},
			start: function() {
				this.context.start({
					success: (a) => {
						console.log("livePusher.start:" + JSON.stringify(a));
						this.lState = true;
						this.isDown = false;


						let that = this;
						this.timer = setInterval(function() {
							that.s++;
							if (that.s > 59) {
								that.s = 0;
								that.m++;
							}
							if (that.m > 11) {
								that.m = 0;
								that.h++;
							}
							if (that.h > 23) {
								that.m = 0;
								that.s = 0;
								// that.clearInterval(Timer);
							}
							that.iTime = that.h + ':' + that.m + ':' + that.s;
							console.log('直播时间' + that.iTime)
						}, 1000)
					}
				});

			},
			close: function() {
				this.context.close({
					success: (a) => {
						console.log("livePusher.close:" + JSON.stringify(a));
					}
				});
			},
			snapshot: function() {
				this.context.snapshot({
					success: (e) => {
						console.log(JSON.stringify(e));
					}
				});
			},
			resume: function() {
				this.context.resume({
					success: (a) => {
						console.log("livePusher.resume:" + JSON.stringify(a));
					}
				});
			},
			pause: function() {
				this.context.pause({
					success: (a) => {
						console.log("livePusher.pause:" + JSON.stringify(a));
					}
				});
			},
			stop: function() {
				this.context.stop({
					success: (a) => {
						this.lState = false;
						console.log(JSON.stringify(a));
					}
				});
			},
			popup() {
				this.$refs.popup.open();


			},
			popup1() {
				console.log('22')
				this.$refs.popup1.open();
			},
			close1: function(done) {

				done();
			},
			confirm: function(done, value) {
				this.stop();
				clearInterval(this.timer);
				console.log('结束时长' + this.iTime);
				// 输入框的值
				console.log(value);
				/* 竖屏展示 */
				plus.screen.lockOrientation('portrait-primary');
				uni.redirectTo({
					url: "/pages/kplive/over?iTime=" + this.iTime + "&srcUrl=" + this.srcUrl
				});
				done();
			},
			switchCamera: function() {
				this.context.switchCamera({
					success: (a) => {
						console.log("livePusher.switchCamera:" + JSON.stringify(a));
					}
				});
			},
			startPreview: function() {
				this.context.startPreview({
					success: (a) => {
						//console.log("livePusher.startPreview:" + JSON.stringify(a));
					}
				});
			},
			stopPreview: function() {
				this.context.stopPreview({
					success: (a) => {
						console.log("livePusher.stopPreview:" + JSON.stringify(a));
					}
				});
			}
		}
	}
</script>

<style>
	.text {
		position: fixed;
		right: 210px;
		top: 60px;
		font-size: 21px;
		padding: 5px 10px;
		color: #424242;
		background: rgba(255, 255, 255, 0.3);

	}

	.aaa {
		position: fixed;
		top: 145px;
		left: 330px;
		padding: 5px 30px;
		font-size: 80px;
		border-radius: 100%;
		text-align: center;
		color: #e4a951;
		border: 2px solid #e4a951;
		background: rgba(255, 255, 255, 0.3);
	}

	.returna {
		position: fixed;
		top: 58px;
		left: 50px;
		background: rgba(0, 0, 0, 0.2);
		color: #ffffff;
		font-size: 26px;
		/* border */
	}

	.w_btn {
		width: 41px;
		height: 41px;
	}

	.overturnBtn2 {
		position: fixed;
		top: 55px;
		left: 80px;
		/* transform: rotate(90deg); */

	}

	.container {
		border-bottom-color: #000000;
		border-bottom-width: 1px;
	}

	.overturnBtn {
		position: fixed;
		right: 18px;
		top: 95px;

	}

	.w_live2 {
		/* transform: rotate(90deg); */
		background: #d83b57;
		font-size: 16px;
		border-radius: 50px;
		padding: 2px 90px;
		text-align: center;
		line-height: 40px;
		color: #FFFFFF;
		position: fixed;
		right: 330px;
		bottom: 20px;

	}

	.qxt {
		/* transform: rotate(90deg); */
		position: fixed;
		color: #FFFFFF;
		top: 62px;
		right: 68px;
	}

	.image2 {
		position: fixed;
		top: 53px;
		right: 23px;
		border: 1px solid #ffffff;
		width: 40px;
		height: 40px;
		border-radius: 50%;
		/* transform: rotate(90deg); */
	}

	.lMess2 {
		position: fixed;
		/* transform: rotate(90deg); */
		top: 50px;
		right: 20px;
		border-radius: 50px;
		width: 180%;
		height: 46px;
		background: #d83b57;
	}


	.overturnBtn1 {
		position: fixed;
		right: 18px;
		top: 170px;
	}

	.w_live {
		background: #d83b57;
		font-size: 16px;
		border-radius: 50px;
		padding: 1px 90px;
		text-align: center;
		line-height: 40px;
		color: #FFFFFF;
		position: fixed;
		bottom: 85px;
		margin: 0 50%;

	}

	.closebtn {
		position: fixed;
		right: 18px;
		top: 60px;
	}

	.closebtn1 {
		position: fixed;
		right: 18px;
		top: 115px;
	}

	.lMess {
		position: fixed;
		top: 60px;
		left: 18px;
		border-radius: 50px;
		width: 180%;
		height: 46px;
		background: #d83b57;
	}


	.image {
		position: fixed;
		top: 63px;
		left: 21px;
		border: 1px solid #ffffff;
		width: 40px;
		height: 40px;
		border-radius: 50%;
	}

	.pcla {
		position: fixed;
		top: 65px;
		left: 68px;
		font-size: 13px;
		color: #FFFFFF;
	}

	.pclaa {
		position: fixed;
		top: 75px;
		left: 68px;
		font-size: 15px;
	}

	.pcla1 {
		position: fixed;
		top: 86px;
		left: 76px;
		font-size: 11px;
		color: #FFFFFF;
	}

	.radiocla {
		position: fixed;
		top: 90px;
		left: 68px;
		width: 5px;
		height: 5px;
		background: #ffba61;
		border-radius: 50%;
	}
</style>
